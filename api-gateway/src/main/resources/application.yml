server:
  port: 4004

resilience4j:
  ratelimiter:
    instances:
      patient-service-limiter:
        limitForPeriod: 10 # Allow 10 requests
        limitRefreshPeriod: 1s # per second
        timeoutDuration: 0 # Fail fast if no permission is available

spring:
  cloud:
    gateway:
      server:
        webflux:
          routes:
            - id: patient-service-route
              uri: http://patient-service:4000
              predicates:
                - Path=/api/patients/**
              filters:
                - StripPrefix=1
                - name: CircuitBreaker # This is the Resilience4j filter
                  args:
                    name: patient-service-limiter # This name matches the instance above
                    fallbackUri: forward:/fallback/ratelimit # If rate limited, forward to this path
                - JwtValidation
            - id: api-docs-patient-route
              uri: http://patient-service:4000
              predicates:
                - Path=/api-docs/patients
              filters:
                - RewritePath=/api-docs/patients,/v3/api-docs
            - id: swagger-ui-patient-route
              uri: http://patient-service:4000
              predicates:
                - Path=/swagger-ui/patients/**
              filters:
                - RewritePath=/swagger-ui/patients(?<segment>/?.*),/swagger-ui$\{segment}
            - id: auth-service-route
              uri: http://auth-service:4005
              predicates:
                - Path=/auth/**
              filters:
                - StripPrefix=1
            - id: api-docs-auth-route
              uri:
                http://auth-service:4005
              predicates:
                - Path=/api-docs/auth
              filters:
                - RewritePath=/api-docs/auth,/v3/api-docs